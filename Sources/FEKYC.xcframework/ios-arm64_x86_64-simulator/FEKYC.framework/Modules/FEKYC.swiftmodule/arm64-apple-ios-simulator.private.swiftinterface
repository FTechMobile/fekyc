// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.1 (swiftlang-5.7.1.135.3 clang-1400.0.29.51)
// swift-module-flags: -target arm64-apple-ios14.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name FEKYC
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AVFoundation
import Combine
import Contacts
import CoreImage
@_exported import FEKYC
import Foundation
import MobileCoreServices
import Network
import Photos
import Swift
import UIKit.UIFont
import UIKit
import Vision
import _Concurrency
import _StringProcessing
import os.log
import os
extension UIKit.UIApplication {
  @_Concurrency.MainActor(unsafe) public func topMostViewController() -> UIKit.UIViewController?
}
public enum EkycTypeDocument : Swift.Int {
  case idCard
  case passport
  case licenseDriver
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@objc public protocol FEKYCDelegate {
  @objc func didEKYCSuccess(sessionId: Swift.String)
}
extension UIKit.UIImage {
  public static func getImage(name: Swift.String) -> UIKit.UIImage
  convenience public init?(named name: Swift.String, aClass: Swift.AnyClass)
  public func imageFromLayer(layer: QuartzCore.CALayer) -> UIKit.UIImage?
}
@objc @_inheritsConvenienceInitializers @objcMembers public class FEKYCApp : ObjectiveC.NSObject {
  @objc public static func instance() -> FEKYC.FEKYCApp
  @objc weak public var delegate: FEKYC.FEKYCDelegate?
  @objc public static func config()
  @objc public func start(transactionId: Swift.String)
  @objc override dynamic public init()
  @objc deinit
}
extension FEKYC.EkycTypeDocument : Swift.Equatable {}
extension FEKYC.EkycTypeDocument : Swift.Hashable {}
extension FEKYC.EkycTypeDocument : Swift.RawRepresentable {}
